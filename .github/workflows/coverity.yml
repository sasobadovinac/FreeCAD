name: Coverity Scan

on:
#  push:
#    branches: [ "main" ]
#  pull_request:
#    branches: [ "main" ]
#  schedule:
#    - cron: '28 12 * * 6'
  workflow_dispatch:  # Allow manual triggers

permissions:
  contents: read

jobs:
  coverity:
    runs-on: ubuntu-latest
    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@0634a2670c59f64b4a01f0f96f84700a4088b9f0 # v2.12.0
        with:
          egress-policy: audit

      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 2
          submodules: recursive

      - name: Download Coverity Build Tool
        run: |
          wget -q https://scan.coverity.com/download/linux64 \
            --post-data "token=${{ secrets.COV_TOKEN }}&project=${{ secrets.COV_PROJECT }}" \
            -O cov-analysis-linux64.tar.gz
          mkdir cov-analysis-linux64
          tar xzf cov-analysis-linux64.tar.gz --strip 1 -C cov-analysis-linux64
          rm cov-analysis-linux64.tar.gz

      - name: Setup build environment
        run: ./package/ubuntu/install-apt-packages.sh

      - name: Build with cov-build
        run: |
          export PATH=$PATH:$(pwd)/cov-analysis-linux64/bin
          mkdir build
          cd build
          cmake -DBUILD_FEM_NETGEN=ON -DFREECAD_USE_PYBIND11=ON ../
          cov-build --dir cov-int --fs-capture-search ../src make -j$(nproc)
      
      - name: Submit to Coverity Scan
        run: |
          cd build
          tar czvf project.tgz cov-int
          FILE_SIZE=$(stat -c %s project.tgz)
          echo "Archive size: $FILE_SIZE bytes"
          curl -X POST \
            -d version="1.1.0dev.42099" \
            -d description="8a58d225c822d20fcf973a8de8b2cd5095d7b31e" \
            -d email=${{ secrets.COV_EMAIL }} \
            -d token=${{ secrets.COV_TOKEN }} \
            -d file_name="project.tgz" \
            https://scan.coverity.com/projects/5846/builds/init \
            | tee response
          upload_url=$(jq -r '.url' response)
          build_id=$(jq -r '.build_id' response)
          curl -X PUT \
            --header 'Content-Type: application/json' \
            --upload-file project.tgz \
            $upload_url
          curl -X PUT \
            -d token="${{ secrets.COV_TOKEN }}" \
            https://scan.coverity.com/projects/5846/builds/$build_id/enqueue
