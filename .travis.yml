language: cpp

os:
  - linux
  #- osx

compiler:
  - gcc
  - clang

#trusty
sudo: required
services:
- docker

env:
  global:
    - secure: "YVpSrf0YXyQKgz9Xd4VSN+K1szHNrlomWhm3h9RzbIJOs14lbBO5GW2oQaXWFfF8j77Ur36H9oyGT89OdHRAgCe/j5p8z313w1TfU3oj8/5dW6c7jVCmZ6chq2wiaIIHD61nzQ9poA5hkE3u4Jv3Ql/cfoAYZDd0hWu3jZBIA/wIjc9NI0zlHRrcMuJkhz+HLBzz5nUEBesRalrxX48PAN0cSZK2+TlwU2h7gIG5WsWwGzUckCF2j/EJTefeJ37B3C6EaEEa+uIQj3I4cqVV1SV9xp5B/6O1+lNfWzn+LpBVyulSxdW0ZF2Tn0V0H7prBeAHbMSqYFVnr//rRsulVBaOEDETyjlJee0Sx60n9V7FZdDDTn7hjKw6pyru7wwRkvjjV6P3nB4S+Bc1nEQuSRtcWbVnt1gza4fhiBJYQ/arVOWx3r8w5Om0R05OGveE8nulcmKosP3musfjW3ITscUahxFpeVojuk8p0p15lS7xlvcw6MEdxRxntopslJMjDZVwX+UvFZUzSozuFSGPRRJjwmFNV+D7hE+w23BqTk01e0JqAl7ZPG0ZwQ5Kt8LWtlbL1GqjNBHSpPTWnhg5RkNa6a9ez9x5RVNf87mmxHX6Y0W9ogVsXgH7xirLU4q2Zjr47vwkw7UWkcxfa4o3KXRAOAY8BnTFi9NMWWh4TJc="

addons:
  coverity_scan:
    project:
      name: "sasobadovinac/FreeCAD"
      description: "Build submitted via Travis CI"
    notification_email: saso.badovinac@gmail.com
    build_command: "make -j3"
    branch_pattern: coverity_scan

before_install:
    - sudo apt-get update -qq
    - sudo apt-get install -y doxygen
    - sudo apt-get install -y libboost-dev
    - sudo apt-get install -y libboost-filesystem-dev
    - sudo apt-get install -y libboost-program-options-dev
    - sudo apt-get install -y libboost-python-dev
    - sudo apt-get install -y libboost-regex-dev
    - sudo apt-get install -y libboost-signals-dev
    - sudo apt-get install -y libboost-system-dev
    - sudo apt-get install -y libboost-thread-dev
#depended from libcoin60-dev
    #- sudo apt-get install -y libcoin60
#for precise
    #- sudo apt-get install -y libcoin60-dev
#for trusty
    - sudo apt-get install -y libcoin80-dev
    - sudo apt-get install -y libeigen3-dev
    - sudo apt-get install -y liboce-foundation-dev
#depended from liboce-foundation-dev
    #- sudo apt-get install -y liboce-foundation1
    - sudo apt-get install -y liboce-modeling-dev
#depended from liboce-modeling-dev
    #- sudo apt-get install -y liboce-modeling1
    - sudo apt-get install -y liboce-ocaf-dev
#depended from liboce-ocaf-dev
    #- sudo apt-get install -y liboce-ocaf-lite-dev
    #- sudo apt-get install -y liboce-ocaf-lite1
    #- sudo apt-get install -y liboce-ocaf1
    - sudo apt-get install -y liboce-visualization-dev
#depended from liboce-ocaf-dev
    #- sudo apt-get install -y liboce-visualization1
#have liboce*-dev (opencascade community edition)
    #- sudo apt-get install -y libopencascade-modeling-6.5.0
    - sudo apt-get install -y libpyside-dev
    - sudo apt-get install -y libqtcore4
    - sudo apt-get install -y libshiboken-dev
    - sudo apt-get install -y libxerces-c-dev
#depended from libcoin60-dev
    #- sudo apt-get install -y libxmu-dev
    #- sudo apt-get install -y libxmu-headers
#pre-installed
    #- sudo apt-get install -y libxmu6
    - sudo apt-get install -y libxmuu-dev
#pre-installed
    #- sudo apt-get install -y libxmuu1
    - sudo apt-get install -y oce-draw
    - sudo apt-get install -y pyside-tools
#pre-installed
    #- sudo apt-get install -y python-dev
#depended from pyside-tools
    #- sudo apt-get install -y python-pyside
    - sudo apt-get install -y qt4-dev-tools
#depended from libqtcore4
    #- sudo apt-get install -y qt4-qmake
    - sudo apt-get install -y shiboken
    - sudo apt-get install -y swig
#Patch the system - there is a bug related to invalid location of libs on ubuntu 12.04
    #- sudo ln -s /usr/lib/x86_64-linux-gnu/ /usr/lib/i386-linux-gnu

install:
    - mkdir build && cd build && cmake ../

#before_script:

script:
    - if [[ $CC == gcc ]]; then export NPROC=2; else export NPROC=2; fi
    - if [ "${COVERITY_SCAN_BRANCH}" != 1 ]; then make -j$NPROC; fi
    - if [ "${COVERITY_SCAN_BRANCH}" != 1 ]; then PYTHONPATH=$(pwd)/lib/ python -c "import sys, unittest, FreeCAD, TestApp; sys.exit(0 if unittest.TextTestRunner().run(TestApp.All()).wasSuccessful() else 1)"; fi

#after_success:

#after_failure:

#after_script:

notifications:
  email: false
  #irc:
    #channels:
      #- "irc.freenode.net#freecad"
    #template:
      #- "%{repository}/%{branch} (%{commit} - %{author}): %{build_url}: %{message}"
    #on_success: always
    #on_failure: always
